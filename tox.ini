[tox]
minversion = 3.4.0
envlist =
    py{38,39,py3}-{base,cryptography-only,pycryptodome-norsa,pycrypto-norsa,compatibility},
    flake8
skip_missing_interpreters = True

[testenv:basecommand]
commands =
    pip --version
    py.test --cov-report term-missing --cov jose {posargs}

[testenv:pypy-compatibility]
# This testenv locks up during coverage so just run tests
commands =
    pip --version
    py.test

[testenv:pypy3-compatibility]
# This testenv locks up during coverage so just run tests
commands =
    pip --version
    py.test

[testenv:compatibility]
extras =
    cryptography
    pycrypto
    pycryptodome

[testenv]
deps =
    pytest
    pytest-cov
    pytest-runner

commands_pre =
    # Remove the python-rsa and python-ecdsa backends
    only: pip uninstall -y ecdsa rsa
    # Remove just the python-rsa backend
    norsa: pip uninstall -y rsa
commands =
    # Test the python-rsa backend
    base: {[testenv:basecommand]commands} -m "not (cryptography or pycryptodome or pycrypto or backend_compatibility)"
    # Test the pyca/cryptography backend
    cryptography: {[testenv:basecommand]commands} -m "not (pycryptodome or pycrypto or backend_compatibility)"
    # Test the pycryptodome backend
    pycryptodome: {[testenv:basecommand]commands} -m "not (cryptography or pycrypto or backend_compatibility)"
    # Test the pycrypto backend
    pycrypto: {[testenv:basecommand]commands} -m "not (cryptography or pycryptodome or backend_compatibility)"
    # Test cross-backend compatibility and coexistence
    compatibility: {[testenv:basecommand]commands}
extras =
    cryptography: cryptography
    pycryptodome: pycryptodome
    pycrypto: pycrypto
    compatibility: {[testenv:compatibility]extras}
setenv =
    # pycrypto does not reliably build if GMP is installed and used so disable it
    pypy: with_gmp=no
    pypy3: with_gmp=no

[testenv:flake8]
basepython = python3.8
skip_install= True
deps =
    flake8
commands = flake8 jose setup.py
